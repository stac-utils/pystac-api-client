name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11-dev"
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'setup.py'

      - uses: actions-rs/toolchain@v1
        # Wheels for orjson are not available for Python 3.11. This sets up the Rust
        # toolchain, so we can build orjson wheel from source.
        if: ${{ startsWith(matrix.python-version, '3.11')}}
        with:
          toolchain: stable
          override: true
          default: true
          profile: minimal

      - name: Execute linters and test suites
        run: ./scripts/cibuild

      - name: Upload All coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: false 

  min-versions:
    name: min-versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3
        with:
          python-version: 3.9
          cache: 'pip'
          cache-dependency-path: 'requirements-min.txt'
      - name: Install minimum requirements
        run: pip install -r requirements-min.txt
      - name: Install
        run: pip install .
      - name: Install dev requirements
        run: pip install -r requirements-dev.txt
      - name: Test
        run: ./scripts/test

  pre-release:
    name: pre-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3
        with:
          python-version: 3.9
          cache: 'pip'
          cache-dependency-path: 'setup.py'
      - name: Install
        run: pip install .
      - name: Install any pre-releases of pystac
        run: pip install -U --pre pystac
      - name: Install dev requirements
        run: pip install -r requirements-dev.txt
      - name: Test
        run: ./scripts/test
